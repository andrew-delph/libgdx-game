buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.2'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.18'
    }
}

plugins {
    id "com.google.protobuf" version "0.8.18"
    id "java"
    id 'pl.allegro.tech.build.axion-release' version '1.8.1'
}

scmVersion {
    tag {
        prefix = 'v'
        versionSeparator = ''
    }
    repository {
        pushTagsOnly = true
    }
    branchVersionIncrementer = [
            'master': 'incrementMajor',
            'stage' : 'incrementMinor',
            'dev'   : 'incrementPatch'
    ]
    checks {
        uncommittedChanges = false // permanently disable uncommitted changes check
        aheadOfRemote = false // permanently disable ahead of remote check
    }
    hooks {
        pre {
            context -> (new File("core/assets/project.version")).write(context.currentVersion)
        }
        pre {
            context -> "git commit -a -m \"Commit project.version file for: ${context.currentVersion}\"".execute()
        }
        pre {
            context ->
                if (project.hasProperty("push")) {
                    println "pushing last commit"
                    println "git push".execute().text
                }
        }
    }
}
project.version = scmVersion.version


def protobufVersion = '3.0.0'
def grpcVersion = '1.32.1'

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

allprojects {
    apply plugin: "eclipse"
    version = '1.0'
    ext {
        appName = "my-gdx-game"
        gdxVersion = '1.9.12'
        roboVMVersion = '2.3.11'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.3'
        aiVersion = '1.8.2'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":core") {
    apply plugin: "java-library"
    apply plugin: 'java'
    apply plugin: 'com.google.protobuf'
    dependencies {

        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
        implementation 'junit:junit:4.12'
        implementation 'io.grpc:grpc-netty:1.32.1'
        implementation 'io.grpc:grpc-okhttp:1.32.1'
        implementation 'io.grpc:grpc-protobuf:1.32.1'
        implementation 'io.grpc:grpc-stub:1.32.1'
        implementation "io.grpc:grpc-services:1.32.1"
        implementation 'org.apache.tomcat:annotations-api:6.0.53'
        implementation 'com.google.inject:guice:4.0:no_aop'

        // todo remove this if we dont need
//        implementation("com.google.guava:guava:31.0.1-jre")


//        implementation group: 'com.google.inject', name: 'guice', version: '4.0'
//        annotationProcessor group: 'com.google.auto.factory', name: 'auto-factory', version: '1.0.1'
//        // https://mvnrepository.com/artifact/com.google.inject.extensions/guice-assistedinject
//        implementation group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: '4.0'
        testImplementation(
                'org.hamcrest:hamcrest-library:2.1'
        )
    }
    sourceSets {
        main {
            proto {
                srcDir 'src/proto'
                include '**/*.proto'
            }
        }
    }
    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:${protobufVersion}"
        }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
            }
        }
        generateProtoTasks {
            all()*.plugins {
                grpc {}
            }
        }
    }
}

project(":desktop") {
    apply plugin: "java-library"
    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
//        implementation group: 'com.google.inject', name: 'guice', version: '4.0'
//        implementation "com.google.inject:guice:4.0-no_aop"
        implementation 'com.google.inject:guice:4.0:no_aop'
//        annotationProcessor group: 'com.google.auto.factory', name: 'auto-factory', version: '1.0.1'
//        // https://mvnrepository.com/artifact/com.google.inject.extensions/guice-assistedinject
//        implementation group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: '4.0'
    }
}

task buildEXE {
    dependsOn tasks.getByPath(':desktop:dist')
    doFirst {
        delete 'out'
        exec {
            workingDir "."
            commandLine 'java', '-jar', 'packr-all-4.0.0.jar', '--jdk', 'https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.14.1%2B1/OpenJDK11U-jdk_x64_windows_hotspot_11.0.14.1_1.zip', '--platform', 'windows64', '--executable', 'myapp', '--classpath', 'desktop/build/libs/desktop-1.0.jar', '--mainclass', 'main.ClientGameMain', '--vmargs', 'Xmx1G', '--output', 'out'
        }
    }
    doLast {
        copy {
            from file('environment/' + ENV + '.config.properties')
            into 'out/'
            rename { 'config.properties' }
        }
    }
}

task zipit(type: Zip) {
    dependsOn tasks.getByPath('buildEXE')
    delete file("$projectDir/dist/game.zip")
    archiveFileName = "game.zip"
    destinationDirectory = file("$projectDir/dist")
    from "out"
}

clean {
    delete "dist", "out"
}



